function plotMSW_dmethod(FirstStageMC, n, coverageMCMSW, coverageMCdmethod, horizons, columnnames, MCdraws, T, confidence, application, p, dataset_name, IRFselect, cumselect, IRFpluginMC, IRFZ, IRFChol)
%  -Plots the MSW and d-method MC coverage.
%  -Syntax:
%       plotMSW_dmethod(FirstStageMC, n, coverageMCMSW, coverageMCdmethod, horizons, columnnames, MCdraws, T, confidence, application, p, dataset_name, IRFselect, cumselect, IRFpluginMC, IRFZ, IRFChol)
%  -Inputs:
%       FirstStageMC:      first stage for the Monte Carlo
%       n:                 dimension of the SVAR
%       coverageMCMSW:     Stores logical value 1 if the true IRF was covered by the Boostrap inference generated by each data for each
%                          draw. Stores logical value 0 otherwise
%       coverageMCdmethod: Stores logical value 1 if the true IRF was covered by the d-method C.I. generated by each data for each draw.
%                          Stores logical value 0 otherwise
%       horizons:          Number of horizons for the Impulse Response Functions (IRFs) (does not include the impact or horizon 0)
%       columnnames:       Vector with the names for the endogenous variables, in the same order as ydata
%       MCdraws:           Number of draws for the Monte Carlo simulation
%       T:                 Size of the time series dataset
%       confidence:        Confidence level
%       application:       Name of the empirical application. This name will be used for creating and accessing folders.
%       p:                 Number of lags in the VAR model
%       dataset_name:      The name of the dataset used for generating the figures (used in the output label)
%       IRFselect:         Indices for the variables that the user wants separate IRF plots for 
%       cumselect:         Indices for the variables that the user wants cumulative IRF plots for
%       IRFpluginMC:       standard plug-in inference for the impulse response function (IRF) for each draw
%       IRFZ:              standard plug-in inference for the impulse response function (IRF) of the true IRF
%       IRFChol:           Choleski estimator for the impulse response function (IRF)

% This version: Semptember 18th, 2018
% Last edited by José Luis Montiel-Olea
%% 1) Plot coverage 
impliedfirststage ...
         = round(mean(FirstStageMC),2);

plots.order     = 1:n;
           
graphcount = 1;

for i = 1:2
    
    figure(graphcount)
    
    graphcount = graphcount + 1;
    
    for iplot = 1:n

        if n > ceil(sqrt(n)) * floor(sqrt(n))

            subplot(ceil(sqrt(n)),ceil(sqrt(n)),plots.order(1,iplot));

        else

            subplot(ceil(sqrt(n)),floor(sqrt(n)),plots.order(1,iplot));

        end

        plot(0:horizons,mean(coverageMCMSW(iplot,:,:,i),3),'o'); hold on
        
        plot(0:horizons,mean(coverageMCdmethod(iplot,:,:,i),3),'rx'); hold off
        
        axis([0 horizons 0 1]);
        
        xlabel('Months after the shock');
        
        ylabel(strcat(columnnames(iplot), 'MC Coverage'));
        
        if iplot == 1
        
            legend(strcat('CS^{AR} (',num2str(100*confidence),'%)'), 'CS^{plug-in}')

            legend('location','southeast')
            
        end
        
    end
    
    if i == 1
        
        master_title = strcat('MC Coverage', num2str(MCdraws),'MC draws, T=',num2str(T),', MC First Stage=',num2str(round(impliedfirststage,2)),')');
        %For non-cumulative plots, we do not include this label in the
        %title

        addpath('functions/figuresfun');

        singletitle(master_title,'fontsize',16,'xoff',0,'yoff',.03);

        clear title;

    else
        
        addpath('functions/figuresfun');

        master_title = strcat('Cumulative', {' '},'MC Coverage', {' '},columnnames(iplot),num2str(MCdraws),'MC draws, T=',num2str(T),', MC First Stage=',num2str(round(impliedfirststage,2)),')');

        master_title = master_title{1};

        singletitle(master_title,'fontsize',16,'xoff',0,'yoff',.03);

        clear title;
    end
    
end


%% 2) Save Coverage Plot

outdir = strcat('Output/',application,'/MC');

if exist(outdir,'dir')
    
    cd(outdir);
  
else
    
    mkdir(outdir);
    
    cd(outdir);

end

namdir = strcat(date,'_','K','_','p=',num2str(p),num2str(confidence));

output_label = strcat(dataset_name,'_p=',num2str(p),'_T=',num2str(T),'_MCFirstStage=',num2str(round(impliedfirststage,2)),'.eps');

save_count = 1;

if exist(namdir,'dir')
    
    cd(namdir);
  
else
    
    mkdir(namdir);
    
    cd(namdir);

end

figure(graphcount-1)

print(gcf,'-depsc2',strcat(num2str(save_count),'MC_Coverage_Cumulative_', output_label));

save_count = save_count + 1;

figure(graphcount-2)

print(gcf,'-depsc2',strcat(num2str(save_count),'MC_Coverage_', output_label));

save_count = save_count + 1;

save(strcat('MC_Coverage_',dataset_name,'_p=',num2str(p),'_T=',num2str(T),'_MCFirstStage=',num2str(round(impliedfirststage,2)),'.mat'));

cd ..

cd ..

cd ..

cd ..

%% 3) Plot Selected IRFs and Cumulatives

% This section of the script plots selected non-cumulative graphs for
% the selected IRF variables and selected cumulative graphs for the 
% selected cumselect variables 

plots.order     = 1:length(IRFselect);

if length(IRFselect) > 1
    
    figure(graphcount)
    
    graphcount = graphcount + 1;
    
    for i = 1:length(IRFselect) 

        iplot = IRFselect(i);

        if length(IRFselect) > ceil(sqrt(length(IRFselect))) * floor(sqrt(length(IRFselect)))

            subplot(ceil(sqrt(length(IRFselect))),ceil(sqrt(length(IRFselect))),plots.order(1,i));

        else

            subplot(ceil(sqrt(length(IRFselect))),floor(sqrt(length(IRFselect))),plots.order(1,i));

        end

        plot(0:horizons,mean(coverageMCMSW(iplot,:,:,1),3),'o'); hold on

        plot(0:horizons,mean(coverageMCdmethod(iplot,:,:,1),3),'rx'); hold off

        axis([0 horizons .5 1]);

        xlabel('Months after the shock');

        ylabel('MC Coverage');

        title(strcat(columnnames(iplot),num2str(MCdraws),'MC draws, T=',num2str(T),', MC First Stage=',num2str(round(impliedfirststage,2)),')'));

        if i == 1

            legend(strcat('CS^{AR} (',num2str(100*confidence),'%)'), 'CS^{plug-in}')

            legend('location','southeast')

        end


    end

end



plots.order = 1:length(cumselect);

if length(cumselect) > 1
    
    figure(graphcount)

    graphcount = graphcount + 1;

    for i = 1:length(cumselect) 

        iplot = cumselect(i);

        if length(IRFselect) > ceil(sqrt(length(IRFselect))) * floor(sqrt(length(IRFselect)))

            subplot(ceil(sqrt(length(IRFselect))),ceil(sqrt(length(IRFselect))),plots.order(1,i));

        else

            subplot(ceil(sqrt(length(IRFselect))),floor(sqrt(length(IRFselect))),plots.order(1,i));

        end

        plot(0:horizons,mean(coverageMCMSW(iplot,:,:,2),3),'o'); hold on

        plot(0:horizons,mean(coverageMCdmethod(iplot,:,:,2),3),'rx'); hold off

        axis([0 horizons .5 1]);

        xlabel('Months after the shock');

        ylabel('MC Coverage');

        title(strcat('Cumulative', {' '}, columnnames(iplot),num2str(MCdraws),'MC draws, T=',num2str(T),', MC First Stage=',num2str(round(impliedfirststage,2)),')'));

        if i == 1

            legend(strcat('CS^{AR} (',num2str(100*confidence),'%)'), 'CS^{plug-in}')

            legend('location','southeast')

        end

    end
    
end

%% 4) Plot separate IRF (cumulative and non)

plots.order     = 1:length(IRFselect);

for i = 1:length(IRFselect) 

    iplot = IRFselect(i);
    
    figure(graphcount);
    
    graphcount = graphcount + 1;
    
    plot(0:horizons,mean(coverageMCMSW(iplot,:,:,1),3),'o'); hold on
        
    plot(0:horizons,mean(coverageMCdmethod(iplot,:,:,1),3),'rx'); hold off
    
    axis([0 horizons .5 1]);

    xlabel('Months after the shock');

    ylabel('MC Coverage');

    title(strcat(columnnames(iplot),num2str(MCdraws),'MC draws, T=',num2str(T),', MC First Stage=',num2str(round(impliedfirststage,2)),')'));
        
    legend(strcat('CS^{AR} (',num2str(100*confidence),'%)'), 'CS^{plug-in}')

    legend('location','southeast')

end

plots.order = 1:length(cumselect);


for i = 1:length(cumselect) 

    iplot = cumselect(i);
    
    figure(graphcount);
    
    graphcount = graphcount + 1;
    
    plot(0:horizons,mean(coverageMCMSW(iplot,:,:,2),3),'o'); hold on
        
    plot(0:horizons,mean(coverageMCdmethod(iplot,:,:,2),3),'rx'); hold off

    axis([0 horizons .5 1]);

    xlabel('Months after the shock');

    ylabel('MC Coverage');

    title(strcat('Cumulative', {' '}, columnnames(iplot),num2str(MCdraws),'MC draws, T=',num2str(T),', MC First Stage=',num2str(round(impliedfirststage,2)),')'));
    
    legend(strcat('CS^{AR} (',num2str(100*confidence),'%)'), 'CS^{plug-in}')

    legend('location','southeast')

end

%% 5) Save separate selected IRF (cumulative and non) plots

cd(strcat('Output/',application,'/MC'));


namdir = strcat(date,'_','K','_','p=',num2str(p),num2str(confidence));

if exist(namdir,'dir')
    
    cd(namdir);
  
else
    
    mkdir(namdir);
    
    cd(namdir);

end


for i = 1:(length(cumselect)) 
    
    figure(graphcount - i)
    
    print(gcf,'-depsc2',strcat(num2str(save_count),'MC_Coverage_Separate_Cumulative_', output_label));
    
    save_count = save_count + 1;

end

for i = length(cumselect)+1:(length(IRFselect)+length(cumselect))
    
    figure(graphcount - i)

    print(gcf,'-depsc2',strcat(num2str(save_count),'MC_Coverage_Separate_', output_label, num2str(graphcount-i)));
    
    save_count = save_count + 1;
    
end

cd ..
    
cd ..

cd ..

cd ..

%% 6) Box&Whisker Type plot to summarize the finite-sample distribution of IRF coefficients

figure(graphcount)

graphcount = graphcount + 1;

plots.order = 1:n;

addpath('functions/figuresfun');

for iplot = 1:n

    if n > ceil(sqrt(n)) * floor(sqrt(n))

        subplot(ceil(sqrt(n)),ceil(sqrt(n)),plots.order(1,iplot));

    else

        subplot(ceil(sqrt(n)),floor(sqrt(n)),plots.order(1,iplot));

    end
    
    IRFplugin = squeeze(IRFpluginMC(iplot,:,:,1))';

    for hori  = 1:horizons + 1
       
        scatter(hori*ones(MCdraws,1),IRFplugin(:,hori),'b','.'); hold on
        
        scatter(hori,median(IRFplugin(:,hori)),'r','o'); hold on
        
        scatter(hori,quantile(IRFplugin(:,hori),.975),'r','^'); hold on
        
        scatter(hori,quantile(IRFplugin(:,hori),.025),'r','v'); hold on
        
        scatter(hori,mean(IRFplugin(:,hori)),'r','*'); hold on
  
    end
    
    clear IRFplugin;
    
    plot(IRFZ(iplot,:,1),'r'); hold on % non-cumulative
    
    plot(IRFChol(iplot,:,1),'--r'); hold on % non-cumulative

    hold off
    
    %axis([1 MC.hori+1 -40 40])  
    
    xlabel('Months after the shock');
    
    %ylabel('IRF Plug-in Estimators');
    
    ylabel(strcat(columnnames(iplot),{' '},'estimators'));
    
    %title(strcat(varNames(iplot),num2str(MCdraws),'MC draws, T=',num2str(InferenceMSWMC.T),', MC First Stage=',num2str(round(MC.impliedfirststage,2)),')')); 

    
end

master_title = strcat('IRF Plug-in Estimators',{' '},num2str(MCdraws),'MC draws, T=',num2str(T),', MC First Stage=',num2str(round(impliedfirststage,2)),')');

master_title = master_title{1};

singletitle(master_title,'fontsize',16,'xoff',0,'yoff',.03);

legend({'True IRF','Cholesky','Plug-in IRFs','Median','.975 quantile','.0275 quantile','Mean'},'Location','northeast')

%Cumulative 

figure(graphcount)

graphcount = graphcount + 1;

plots.order = 1:n;

for iplot = 1:n

    if n > ceil(sqrt(n)) * floor(sqrt(n))

        subplot(ceil(sqrt(n)),ceil(sqrt(n)),plots.order(1,iplot));

    else

        subplot(ceil(sqrt(n)),floor(sqrt(n)),plots.order(1,iplot));

    end
    
    IRFplugin = squeeze(IRFpluginMC(iplot,:,:,2))';

    for hori  = 1:horizons + 1
       
        scatter(hori*ones(MCdraws,1),IRFplugin(:,hori),'b','.'); hold on
        
        scatter(hori,median(IRFplugin(:,hori)),'r','o'); hold on
        
        scatter(hori,quantile(IRFplugin(:,hori),.975),'r','^'); hold on
        
        scatter(hori,quantile(IRFplugin(:,hori),.025),'r','v'); hold on
        
        scatter(hori,mean(IRFplugin(:,hori)),'r','*'); hold on
  
    end
    
    clear IRFplugin;
    
    plot(IRFZ(iplot,:,2),'r'); hold on % cumulative
    
    plot(IRFChol(iplot,:,2),'--r'); hold on % cumulative

    hold off
    
    %axis([1 MC.hori+1 -40 40])  
    
    xlabel('Months after the shock');
    
    %ylabel('IRF Plug-in Estimators');
    
    ylabel(strcat(columnnames(iplot),{' '},'estimators'));
    
    %title(strcat('Cumulative', {' '},varNames(iplot),num2str(MCdraws),'MC draws, T=',num2str(InferenceMSWMC.T),', MC First Stage=',num2str(round(MC.impliedfirststage,2)),')')); 

    
end

master_title = strcat('Cumulative IRF Plug-in Estimators',{' '},num2str(MCdraws),'MC draws, T=',num2str(T),', MC First Stage=',num2str(round(impliedfirststage,2)),')');

master_title = master_title{1};

singletitle(master_title,'fontsize',16,'xoff',0,'yoff',.03);

legend({'True IRF','Cholesky','Plug-in IRFs','Median','.975 quantile','.0275 quantile','Mean'},'Location','northeast')

%% 7) Save Box&Whisker Type plots

cd(strcat('Output/',application,'/MC'));

namdir = strcat(date,'_','K','_','p=',num2str(p),num2str(confidence));

if exist(namdir,'dir')
    
    cd(namdir);
  
else
    
    mkdir(namdir);
    
    cd(namdir);

end

figure(graphcount - 1)

print(gcf,'-depsc2',strcat(num2str(save_count),'Box&Whisker_Cumulative', output_label));

save_count = save_count + 1;

figure(graphcount - 2)

print(gcf,'-depsc2',strcat(num2str(save_count),'Box&Whisker', output_label)); % non-cumulative is not marked in the title

save_count = save_count + 1;

cd ..

cd ..

cd ..

cd ..
    
